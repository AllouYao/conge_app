{% extends 'base.html.twig' %}

{% block title %}Acompte / Prêt {% endblock %}
{% block stylesheets %}
    <style>
        #dataGridAcompte {
            border-width: 50px;
            height: 350px;
        }
    </style>
{% endblock %}
{% block body %}
    <form method="POST" action="#" id="">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title-custom" style="color: white" id="date">
                            <i data-feather="list"></i>
                            PRET & ACOMPTE SUR LA PERIODE DE {{ date|upper }}
                        </h5>
                    </div>
                    <div class="card-body">
                        <div id="dataGridAcompte"></div>
                    </div>
                    <div class="card-footer">
                        <a href="{{ path('app_paiement_acompte_new') }}" class="btn btn-primary float-end"
                           style="color: white">Nouveau</a>
                    </div>
                </div>
            </div>
        </div>
    </form>
{% endblock %}

{% block javascripts %}

    <script>
        function formatNumber(num) {
            return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
        }

        $(document).ready(function () {
            $("#dataGridAcompte").dxDataGrid({
                dataSource: '{{ url("app_paiement_acompte_api_acompte") }}',
                showBorders: true,
                showColumnLines: true,
                showRowLines: true,
                rowAlternationEnabled: true,
                scrolling: {
                    columnRenderingMode: 'virtual',
                    mode: 'virtual'
                },
                editing: {
                    mode: 'cell'
                },
                selection: {
                    mode: 'multiple',
                    showCheckBoxesMode: 'always'
                },
                groupPanel: {
                    visible: true
                },
                export: {
                    enabled: true,
                    allowExportSelectedData: true,
                    formats: ['xlsx']
                },
                onExporting(e) {
                    if (e.format === 'xlsx') {
                        const workbook = new ExcelJS.Workbook();
                        const worksheet = workbook.addWorksheet('Acompte ou prêt');
                        DevExpress.excelExporter.exportDataGrid({
                            component: e.component,
                            worksheet,
                            autoFilterEnabled: true,
                            customizeCell: function (options) {
                                const {gridCell, excelCell} = options;
                                if (gridCell.rowType === 'data' && typeof gridCell.value === "number") {
                                    excelCell.text = formatNumber(gridCell.value);
                                    excelCell.font = {size: 9};
                                    excelCell.alignment = {horizontal: 'left'};
                                }
                            }
                        }).then(() => {
                            const date = new Date();
                            const year = date.getFullYear();
                            const month = date.getMonth() + 1;
                            const day = date.getDate();
                            const dateFormat = `${year}-${month < 10 ? '0' : ''}${month}-${day < 10 ? '0' : ''}${day}`;
                            workbook.xlsx.writeBuffer().then(function (buffer) {
                                saveAs(new Blob([buffer], {type: 'application/octet-stream'}), `ACOMPTE_PRET${dateFormat}.xlsx`);
                            });
                        });
                        e.cancel = true;
                    }
                },
                grouping: {
                    autoExpandAll: true
                },
                searchPanel: {
                    visible: true,
                    width: 240,
                    placeholder: 'Rechercher...'
                },
                paging: {
                    pageSize: 10
                },
                allowColumnReordering: true,
                allowColumnResizing: true,
                columnAutoWidth: true,
                columns: [
                    {
                        caption: 'Date Opération',
                        alignment: 'center',
                        dataType: 'string',
                        dataField: 'date',
                    },
                    {
                        caption: 'Matricule',
                        alignment: 'left',
                        dataType: 'string',
                        dataField: 'matricule',
                    },
                    {
                        caption: 'Nom & Prénom(s)',
                        alignment: 'left',
                        dataType: 'string',
                        dataField: 'nom_prenom',
                    },
                    {
                        caption: 'Type Opération',
                        alignment: 'left',
                        dataType: 'string',
                        dataField: 'type',
                    },
                    {
                        caption: 'Montant',
                        alignment: 'right',
                        dataType: 'number',
                        dataField: 'amount',
                    },
                    {
                        caption: 'Montant Remboursé',
                        alignment: 'right',
                        dataType: 'number',
                        dataField: 'amount_refund',
                    },
                    {
                        caption: 'Restant',
                        alignment: 'right',
                        dataType: 'number',
                        dataField: 'remaining',
                    },
                    {
                        caption: 'Action',
                        alignment: 'center',
                        cellTemplate: function (container, options) {
                            const status = options.data.status;
                            if (status === 'EN ATTENTE') {
                                $("<a title='modifier'>")
                                    .html('<i data-feather="edit" style="color: #C9971C"></i>')
                                    .attr("href", options.data.modifier)
                                    .appendTo(container);
                                feather.replace();
                            } else {

                            }

                        },
                    },
                ],
                summary: {
                    totalItems: [
                        {
                            column: 'matricule',
                            summaryType: 'count',
                            displayFormat: 'Salariés : {0}'
                        },
                        {
                            column: 'type',
                            customizeText() {
                                return 'CUMUL ';
                            }
                        },
                        {
                            column: 'amount',
                            summaryType: 'sum',
                            displayFormat: '{0}',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'amount_refund',
                            summaryType: 'sum',
                            displayFormat: '{0}',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'remaining',
                            summaryType: 'sum',
                            displayFormat: '{0}',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                    ]
                },
            }).dxDataGrid("instance");
        })
    </script>

{% endblock %}