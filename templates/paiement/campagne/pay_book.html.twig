{% extends 'base.html.twig' %}

{% block title %}Livre de paie{% endblock %}
{% block stylesheets %}
    <style>
        #dataGridPayBook {
            height: 500px;
            border-width: 50px;

        }
    </style>
{% endblock %}
{% block body %}
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title-custom" style="color: white">
                        <i data-feather="list"></i>
                        LIVRE DE PAIE
                    </h5>
                </div>
                <div class="card-body">
                    <div id="dataGridPayBook"></div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}

    <script>
        function formatNumber(num) {
            return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
        }

        $(document).ready(function () {
            let debut;
            let fin;
            $("#dataGridPayBook").dxDataGrid({
                // Configuration goes here
                dataSource: `{{ url('campagne_pay_book') }}`,
                showBorders: true,
                scrolling: {
                    columnRenderingMode: 'virtual'
                },
                groupPanel: {
                    visible: true
                },
                export: {
                    enabled: true,
                    allowExportSelectedData: true,
                    formats: ['xlsx'],
                },
                onExporting(e) {
                    if (e.format === 'xlsx') {
                        const workbook = new ExcelJS.Workbook();
                        const worksheet = workbook.addWorksheet('Livre de paie');
                        DevExpress.excelExporter.exportDataGrid({
                            component: e.component,
                            worksheet,
                            autoFilterEnabled: true,
                            customizeCell: function (options) {
                                const {gridCell, excelCell} = options;
                                if (gridCell.rowType === 'data' && typeof gridCell.value === "number") {
                                    excelCell.text = formatNumber(gridCell.value)
                                    excelCell.font = {size: 9};
                                    excelCell.alignment = {horizontal: 'left'};
                                }
                            }
                        }).then(() => {
                            workbook.xlsx.writeBuffer().then(function (buffer) {
                                saveAs(new Blob([buffer], {type: 'application/octet-stream'}), `Livre de paie ${debut ?? " "} au ${fin ?? " "}.xlsx`);
                            });
                        });
                        e.cancel = true;
                    }
                },
                grouping: {
                    autoExpandAll: true,
                },
                searchPanel: {
                    visible: true,
                    width: 240,
                    placeholder: 'Rechercher...',
                },
                showColumnLines: true,
                showRowLines: true,
                paging: {
                    pageSize: 10,
                },
                allowColumnReordering: true,
                allowColumnResizing: true,
                columnAutoWidth: true,
                columns: [
                    {
                        caption: "Type",
                        dataField: "type_campagne",
                        dataType: "string",
                        alignment: "center",
                        fixed: true,
                    },
                    {
                        caption: "Matricule",
                        dataField: "matricule",
                        dataType: "string",
                        alignment: "center",
                        fixed: true,
                    },
                    {
                        dataField: 'full_name_salaried',
                        dataType: 'string',
                        caption: 'Nom et Prénom',
                        alignment: 'left',
                        fixed: true,
                    },
                    {
                        dataField: 'category_salaried',
                        dataType: 'string',
                        caption: 'Catégorie Salarié',
                        alignment: 'center',
                        width: 120
                    },
                    {
                        caption: "Service",
                        dataField: "service",
                        dataType: "string",
                        alignment: "left"
                    },
                    {
                        dataField: 'number_part_salaried',
                        dataType: 'string',
                        caption: 'Nombre De Part',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(data.value);
                        },
                    },
                    {
                        dataField: 'date_embauche',
                        dataType: 'string',
                        caption: 'Date d\'embauche',
                        alignment: 'center',
                        width: 120
                    },
                    {
                        caption: "Numéro CNPS",
                        dataField: "num_cnps",
                        dataType: "string",
                        alignment: "left"
                    },

                    {
                        dataField: 'salaire_base_salaried',
                        dataType: 'number',
                        caption: 'Salaire Catégoriel',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        dataField: 'sursalaire_salaried',
                        dataType: 'number',
                        caption: 'Sursalaire',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        dataField: 'majoration_heurs_supp',
                        dataType: 'number',
                        caption: 'Majoration heure supp.',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        dataField: 'conge_payes',
                        dataType: 'number',
                        caption: 'Congés payés',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        dataField: 'prime_anciennete',
                        dataType: 'number',
                        caption: 'Prime d\'ancienneté',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        dataField: 'prime_transport_imposable',
                        dataType: 'number',
                        caption: 'Prime de transport imposable',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        dataField: 'avantage_imposable',
                        dataType: 'number',
                        caption: 'AV. nature imposable',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        dataField: 'prime_fonction',
                        dataType: 'number',
                        caption: 'Prime de fonction',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        dataField: 'prime_logement',
                        dataType: 'number',
                        caption: 'Prime de logement',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        dataField: 'indemnite_fonction',
                        dataType: 'number',
                        caption: 'Indemnité de fonction',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        dataField: 'indemnite_logement',
                        dataType: 'number',
                        caption: 'Indemnité de logement',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },

                    {
                        dataField: 'salaire_brut_salaried',
                        dataType: 'number',
                        caption: 'Salaire Brut',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        dataField: 'salaire_imposable_salaried',
                        dataType: 'number',
                        caption: 'Salaire Brut Imposable',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                      caption: 'Partie des céssations de contrat',
                      alignment: 'center',
                      columns: [
                          {
                              caption: 'Date cessation',
                              alignment: 'center',
                              dataType: 'string',
                              dataField: 'date_cessation',
                          },
                          {
                              caption: 'Solde presence',
                              alignment: 'right',
                              dataType: 'number',
                              dataField: 'solde_presence',
                              customizeText: function (data) {
                                  return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                              },
                          },
                          {
                              caption: 'Gratification prorata',
                              alignment: 'right',
                              dataType: 'number',
                              dataField: 'solde_gratification',
                              customizeText: function (data) {
                                  return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                              },
                          },
                          {
                              caption: 'Solde congés',
                              alignment: 'right',
                              dataType: 'number',
                              dataField: 'solde_conges',
                              customizeText: function (data) {
                                  return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                              },
                          },
                          {
                              caption: 'Solde préavis',
                              alignment: 'right',
                              dataType: 'number',
                              dataField: 'solde_preavis',
                              customizeText: function (data) {
                                  return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                              },
                          },
                          {
                              caption: 'Indemnite licenciement',
                              alignment: 'right',
                              dataType: 'number',
                              dataField: 'solde_indemnite_licenciement',
                              customizeText: function (data) {
                                  return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                              },
                          },
                          {
                              caption: 'Indemnite retraite',
                              alignment: 'right',
                              dataType: 'number',
                              dataField: 'solde_retraite',
                              customizeText: function (data) {
                                  return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                              },
                          },
                          {
                              caption: 'Indemnite déces',
                              alignment: 'right',
                              dataType: 'number',
                              dataField: 'solde_indemnite_deces',
                              customizeText: function (data) {
                                  return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                              },
                          },
                          {
                              caption: 'Frais funéraire',
                              alignment: 'right',
                              dataType: 'number',
                              dataField: 'frais_funeraire',
                              customizeText: function (data) {
                                  return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                              },
                          },
                      ]
                    },
                    {
                      caption: "Charge salariale",
                      alignment: 'center',
                      columns: [
                          {
                              dataField: 'its_salaried',
                              dataType: 'number',
                              caption: 'ITS',
                              alignment: 'right',
                              width: 120,
                              customizeText: function (data) {
                                  return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                              },
                          },
                          {
                              dataField: 'cnps_salaried',
                              dataType: 'number',
                              caption: 'CNPS',
                              alignment: 'right',
                              width: 120,
                              customizeText: function (data) {
                                  return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                              },
                          },
                          {
                              dataField: 'cmu_salaried',
                              dataType: 'number',
                              caption: 'CMU',
                              alignment: 'right',
                              width: 120,
                              customizeText: function (data) {
                                  return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                              },
                          },
                          {
                              dataField: 'charge_salarial',
                              dataType: 'number',
                              caption: 'Total Retenu salariale',
                              alignment: 'right',
                              width: 120,
                              customizeText: function (data) {
                                  return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                              },
                          },
                      ]
                    },

                    {
                        dataField: 'prime_transport_legal',
                        dataType: 'number',
                        caption: 'Prime de transport légal',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        dataField: 'net_payer_salaried',
                        dataType: 'number',
                        caption: 'Net à Payer',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },

                    {
                        caption: 'Charge SO patronal',
                        alignment: 'center',
                        columns: [
                            {
                                dataField: 'employer_is',
                                dataType: 'number',
                                caption: 'Impôt sur le salaire (IS)',
                                alignment: 'right',
                                width: 120,
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                dataField: 'employer_cr',
                                dataType: 'number',
                                caption: 'Caisse de Retraite',
                                alignment: 'right',
                                width: 120,
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                dataField: 'employer_cmu',
                                dataType: 'number',
                                caption: 'CMU',
                                alignment: 'right',
                                width: 120,
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                dataField: 'employer_pr',
                                dataType: 'number',
                                caption: 'Prest. Familiale',
                                alignment: 'right',
                                width: 120,
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                dataField: 'employer_at',
                                dataType: 'number',
                                caption: 'Accident travail',
                                alignment: 'right',
                                width: 120,
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                dataField: 'employer_ta',
                                dataType: 'number',
                                caption: 'Taux d\'apprentissage',
                                alignment: 'right',
                                width: 120,
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                dataField: 'employer_fpc',
                                dataType: 'number',
                                caption: 'FPC',
                                alignment: 'right',
                                width: 120,
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                dataField: 'employer_fpc_annuel',
                                dataType: 'number',
                                caption: 'FPC annuel',
                                alignment: 'right',
                                width: 120,
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                dataField: 'charge_patronal',
                                dataType: 'number',
                                caption: 'Charge Patronal',
                                alignment: 'right',
                                width: 120,
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                        ]
                    },

                    {
                        dataField: 'masse_salariale',
                        dataType: 'number',
                        caption: 'Masse Salariale',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        dataField: 'print_bulletin',
                        caption: 'Imprimer bulletin',
                        alignment: 'center',
                        cellTemplate: function (container, options) {
                            $("<a>")
                                .html('<i data-feather="book" style="color: black"></i>')
                                .attr("href", options.data.print_bulletin)
                                .attr("target", '_blank')
                                .appendTo(container);
                            feather.replace();
                        },
                    },

                ],


            })
        });
    </script>

{% endblock %}