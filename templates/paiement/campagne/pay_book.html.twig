{% extends 'base.html.twig' %}

{% block title %}Livre de paie{% endblock %}
{% block stylesheets %}
    <style>
        #dataGridPayBook {
            border-width: 50px;
        }

        #normal-contained > div {
            width: 150px;
            height: 40px;
            text-align: center;
            color: white;
            background-color: #0b0b0f;
        }

    </style>
{% endblock %}
{% block body %}
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div style="display: flex" class="card-header">
                    <div>
                        <h5 class="card-title-custom" style="color: white">
                            <i data-feather="list"></i>
                            LIVRE DE PAIE
                        </h5>
                    </div>
                    <div class="float-end">
                        <h5 class="card-title-custom" style="color: white; margin-left: 1030px">
                           PERIODE DU  {{ date_debut }}  AU  {{ date_fin }}
                        </h5>
                    </div>
                </div>
                <div class="card-body">
                    <div id="dataGridPayBook"></div>
                </div>
                <div class="card-footer">
                    <div id="normal-contained" class="float-end"></div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}

    <script>
        function formatNumber(num) {
            return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
        }

        $(document).ready(function () {
            let debut;
            let fin;
            $("#dataGridPayBook").dxDataGrid({
                // Configuration goes here
                dataSource: `{{ url('campagne_pay_book') }}`,
                showBorders: true,
                showColumnLines: true,
                showRowLines: true,
                rowAlternationEnabled: true,
                height: 500,
                scrolling: {
                    columnRenderingMode: 'virtual'
                },
                groupPanel: {
                    visible: true
                },
                export: {
                    enabled: true,
                    allowExportSelectedData: true,
                    formats: ['xlsx'],
                },
                onExporting(e) {
                    if (e.format === 'xlsx') {
                        const workbook = new ExcelJS.Workbook();
                        const worksheet = workbook.addWorksheet('Livre de paie');
                        DevExpress.excelExporter.exportDataGrid({
                            component: e.component,
                            worksheet,
                            autoFilterEnabled: true,
                            customizeCell: function (options) {
                                const {gridCell, excelCell} = options;
                                if (gridCell.rowType === 'data' && typeof gridCell.value === "number") {
                                    excelCell.text = formatNumber(gridCell.value)
                                    excelCell.font = {size: 9};
                                    excelCell.alignment = {horizontal: 'left'};
                                }
                            }
                        }).then(() => {
                            workbook.xlsx.writeBuffer().then(function (buffer) {
                                saveAs(new Blob([buffer], {type: 'application/octet-stream'}), `Livre de paie ${debut ?? " "} au ${fin ?? " "}.xlsx`);
                            });
                        });
                        e.cancel = true;
                    }
                },
                grouping: {
                    autoExpandAll: true,
                },
                searchPanel: {
                    visible: true,
                    width: 240,
                    placeholder: 'Rechercher...',
                },
                paging: {
                    pageSize: 20,
                },
                allowColumnReordering: true,
                allowColumnResizing: true,
                columnAutoWidth: true,
                columns: [
                    {
                        caption: "NÂ°",
                        dataField: "index",
                        dataType: "string",
                        alignment: "center",
                        fixed: true,
                    },
                    {
                        caption: "TYPE",
                        dataField: "type_campagne",
                        dataType: "string",
                        alignment: "center",
                        fixed: true,
                    },
                    {
                        caption: 'NOM ET PRENOMS',
                        dataField: 'full_name_salaried',
                        dataType: 'string',
                        alignment: 'left',
                        fixed: true,
                    },
                    {
                        caption: 'CATEGORIE AGENT',
                        dataField: 'category_salaried',
                        dataType: 'string',
                        alignment: 'center',
                    },
                    {
                        caption: "SITE DE TRAVAIL ",
                        dataField: "service",
                        dataType: "string",
                        alignment: "left"
                    },
                    {
                        caption: 'NOMBRE DE PART',
                        dataField: 'number_part_salaried',
                        dataType: 'string',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(data.value);
                        },
                    },
                    {
                        caption: 'SALAIRE DE BASE',
                        dataField: 'salaire_base_salaried',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'SURSALAIRE',
                        dataField: 'sursalaire_salaried',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'MAJORATION HEURE SUPP.',
                        dataField: 'majoration_heurs_supp',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'NBR JOUR CONGES ACQUIS',
                        dataField: 'nb_jour_conges_acquis',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'CONGES PAYES',
                        dataField: 'conge_payes',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'PRIME ANCIENNETE',
                        dataField: 'prime_anciennete',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'PRIME DE TENUE',
                        dataField: 'prime_de_tenue',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'PRIME DE SALISSURE',
                        dataField: 'prime_de_salissure',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'PRIME OUTILLAGE',
                        dataField: 'prime_outillage',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'PRIME DE PANIER',
                        dataField: 'prime_panier',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'PRIME TRANSPORT IMPOSABLE',
                        dataField: 'prime_transport_imposable',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'PRIME DE FONCTION',
                        dataField: 'prime_fonction',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'PRIME DE LOGEMENT',
                        dataField: 'prime_logement',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'INDEMNITE DE FONCTION',
                        dataField: 'indemnite_fonction',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'INDEMNITE DE LOGEMENT',
                        dataField: 'indemnite_logement',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'AV. NATURE IMPOSABLE',
                        dataField: 'avantage_imposable',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'BRUT IMPOSABLE',
                        dataField: 'salaire_imposable_salaried',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'Partie des cÃ©ssations de contrat',
                        alignment: 'center',
                        columns: [
                            {
                                caption: 'Date cessation',
                                alignment: 'center',
                                dataType: 'string',
                                dataField: 'date_cessation',
                            },
                            {
                                caption: 'Solde presence',
                                alignment: 'right',
                                dataType: 'number',
                                dataField: 'solde_presence',
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                caption: 'Gratification prorata',
                                alignment: 'right',
                                dataType: 'number',
                                dataField: 'solde_gratification',
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                caption: 'Solde congÃ©s',
                                alignment: 'right',
                                dataType: 'number',
                                dataField: 'solde_conges',
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                caption: 'Solde prÃ©avis',
                                alignment: 'right',
                                dataType: 'number',
                                dataField: 'solde_preavis',
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                caption: 'Indemnite licenciement',
                                alignment: 'right',
                                dataType: 'number',
                                dataField: 'solde_indemnite_licenciement',
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                caption: 'Indemnite retraite',
                                alignment: 'right',
                                dataType: 'number',
                                dataField: 'solde_retraite',
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                caption: 'Indemnite dÃ©ces',
                                alignment: 'right',
                                dataType: 'number',
                                dataField: 'solde_indemnite_deces',
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                caption: 'Frais funÃ©raire',
                                alignment: 'right',
                                dataType: 'number',
                                dataField: 'frais_funeraire',
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                        ]
                    },
                    {
                        caption: "CHARGES SALARIALES",
                        alignment: 'center',
                        columns: [
                            {
                                caption: 'ITS',
                                dataField: 'its_salaried',
                                dataType: 'number',
                                alignment: 'right',
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                caption: 'TOTAL RETENUE FISCALE',
                                dataField: 'fixcale_salariale',
                                dataType: 'number',
                                alignment: 'right',
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                caption: 'CNPS',
                                dataField: 'cnps_salaried',
                                dataType: 'number',
                                alignment: 'right',
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                caption: 'CMU',
                                dataField: 'cmu_salaried',
                                dataType: 'number',
                                alignment: 'right',
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                caption: 'TOTAL RETENUE',
                                dataField: 'charge_salarial',
                                dataType: 'number',
                                alignment: 'right',
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                        ]
                    },
                    {
                        caption: 'INDEMNITE DE TRANSPORT',
                        dataField: 'prime_transport_legal',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'ASSURANCE',
                        dataField: 'assurance_salariale',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'NET A PAYER',
                        dataField: 'net_payer_salaried',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'CHARGES FISCALES PATRONALES',
                        alignment: 'center',
                        columns: [
                            {
                                caption: 'ITS',
                                dataField: 'employer_is',
                                dataType: 'number',
                                alignment: 'right',
                                width: 100,
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                caption: 'FDFP',
                                dataField: 'amount_fdfp',
                                dataType: 'number',
                                alignment: 'right',
                                width: 100,
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            }
                        ]
                    },
                    {
                        caption: 'CHARGES SOCIALES PATRONALES',
                        alignment: 'center',
                        columns: [
                            {
                                caption: 'CAISSE DE RETRAITE',
                                dataField: 'employer_cr',
                                dataType: 'number',
                                alignment: 'right',
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                caption: 'CMU',
                                dataField: 'employer_cmu',
                                dataType: 'number',
                                alignment: 'right',
                                width: 100,
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                caption: 'PRESTATION FAMILIALE',
                                dataField: 'employer_pr',
                                dataType: 'number',
                                alignment: 'right',
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                            {
                                caption: 'ACCIDENT DE TRAVAIL',
                                dataField: 'employer_at',
                                dataType: 'number',
                                alignment: 'right',
                                customizeText: function (data) {
                                    return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                                },
                            },
                        ]
                    },
                    {
                        caption: 'ASSURANCE PART PATRONALE',
                        dataField: 'assurance_patronales',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'TOTAL CHARGES PATRONALES',
                        dataField: 'charge_patronal',
                        dataType: 'number',
                        alignment: 'right',
                        width: 120,
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        caption: 'MASSE SALARIALE',
                        dataField: 'masse_salariale',
                        dataType: 'number',
                        alignment: 'right',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(Math.round(data.value));
                        },
                    },
                    {
                        dataField: 'print_bulletin',
                        caption: 'Imprimer bulletin',
                        alignment: 'center',
                        cellTemplate: function (container, options) {
                            $("<a>")
                                .html('<i data-feather="book" style="color: black"></i>')
                                .attr("href", options.data.print_bulletin)
                                .attr("target", '_blank')
                                .appendTo(container);
                            feather.replace();
                        },
                    },

                ],
                summary: {
                    totalItems: [
                        {
                            column: 'index',
                            summaryType: 'count',
                            displayFormat: 'Participant : {0}'
                        },
                        {
                            column: 'number_part_salaried',
                            displayFormat: 'Total :'
                        },
                        {
                            column: 'salaire_base_salaried',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'sursalaire_salaried',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'majoration_heurs_supp',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'conge_payes',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'prime_anciennete',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'prime_de_tenue',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'prime_de_salissure',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'prime_outillage',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'prime_panier',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'prime_transport_imposable',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'avantage_imposable',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'prime_fonction',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'prime_logement',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'indemnite_fonction',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'indemnite_logement',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'salaire_imposable_salaried',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'solde_presence',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'solde_preavis',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'solde_conges',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'solde_gratification',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'solde_indemnite_deces',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'frais_funeraire',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'solde_retraite',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'solde_indemnite_licenciement',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'its_salaried',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'fixcale_salariale',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'cnps_salaried',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'cmu_salaried',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'assurance_salariale',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'charge_salarial',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'prime_transport_legal',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'net_payer_salaried',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'employer_is',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'employer_cr',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'employer_cmu',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'employer_pr',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'employer_at',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'amount_fdfp',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'assurance_patronales',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'charge_patronal',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'masse_salariale',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                    ]
                }
            })
            $("#normal-contained").dxButton({
                stylingMode: 'contained',
                text: 'Imprimer bulletins',
                type: 'default',
                width: 120,
                onClick() {
                    window.location.href = '/campagne/bulletin/all_print';
                }
            })
        });
    </script>
{% endblock %}