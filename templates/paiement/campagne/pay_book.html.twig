{% extends 'base.html.twig' %}

{% block title %}Livre de paie{% endblock %}
{% block stylesheets %}
    <style>
        #dataGridPayBook {
            border-width: 50px;
        }

        #normal-contained > div {
            width: 150px;
            height: 40px;
            text-align: center;
            color: white;
            background-color: #0b0b0f;
        }

    </style>
{% endblock %}
{% block body %}
<form method="POST" action="{{ path('campagne_validated') }}" id="formCampagnevalidated">
    <div class="modal fade" id="validationConfirmationModal" tabindex="-1" role="dialog"
        aria-labelledby="validationConfirmationModal" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="validationConfirmationModal">Confirmation de
                        validation</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Êtes-vous sûr de vouloir valider les informations ci-dessous, après quoi vous ne pourriez plus les modifiés ?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Annuler
                    </button>
                    <button type="submit" class="btn btn-success confirm" name="confirm"
                            id="confirmValidationButton">
                        Confirmer
                    </button>
                </div>
            </div>
        </div>
    </div>
</form>

<form method="POST" action="{{ path('campagne_canceled') }}" id="formCampagneCanceled">
    <div class="modal fade" id="validationCancelModal" tabindex="-1" role="dialog"
        aria-labelledby="validationConfirmationModal" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="validationCancelModal">Confirmation de
                        validation</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Êtes-vous sûr de vouloir annulé ?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Annuler
                    </button>
                    <button type="submit" class="btn btn-success confirm" name="confirm"
                            id="confirmValidationButton">
                        Confirmer
                    </button>
                </div>
            </div>
        </div>
    </div>
</form>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div style="display: flex" class="card-header">
                <div>
                    <h5 class="card-title-custom" style="color: white">
                        <i data-feather="list"></i>
                        LIVRE DE PAIE
                    </h5>
                </div>
                <div class="float-end">
                    <h5 class="card-title-custom" style="color: white; margin-left: 1030px">
                        PERIODE DU {{ date_debut }} AU {{ date_fin }}
                    </h5>
                </div>
            </div>
            <div class="card-body">
                <div id="dataGridPayBook"></div>
            </div>
            <div class="card-footer">
                {% if campagne %}
                    {% if campagne.status == "VALIDEE" %}
                        <div id="print-contained" class="float-end mx-1"></div>
                    {% else %}
                        <div id="validated-contained" class="float-end mx-1"></div>
                       <div id="canceled-contained" class="float-end mx-1"></div>  
                    {% endif %}
                {% endif %}
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}

    <script>
        function formatNumber(num) {
            return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
        }

        $(document).ready(function () {
            $("#dataGridPayBook").dxDataGrid({
                // Configuration goes here
                dataSource: `{{ url('campagne_pay_book') }}`,
                showBorders: true,
                showColumnLines: true,
                showRowLines: true,
                rowAlternationEnabled: true,
                height: 400,
                scrolling: {
                    columnRenderingMode: 'virtual'
                },
                groupPanel: {
                    visible: true
                },
                export: {
                    enabled: true,
                    allowExportSelectedData: true,
                    formats: ['xlsx'],
                },
                onExporting(e) {
                    if (e.format === 'xlsx') {
                        const workbook = new ExcelJS.Workbook();
                        const worksheet = workbook.addWorksheet('Livre de paie');
                        DevExpress.excelExporter.exportDataGrid({
                            component: e.component,
                            worksheet,
                            autoFilterEnabled: true,
                            customizeCell: function (options) {
                                const {gridCell, excelCell} = options;
                                if (gridCell.rowType === 'data' && typeof gridCell.value === "number") {
                                    excelCell.text = formatNumber(gridCell.value)
                                    excelCell.font = {size: 9};
                                    excelCell.alignment = {horizontal: 'left'};
                                }
                            }
                        }).then(() => {
                            workbook.xlsx.writeBuffer().then(function (buffer) {
                                saveAs(new Blob([buffer], {type: 'application/octet-stream'}), `Livre de paie.xlsx`);
                            });
                        });
                        e.cancel = true;
                    }
                },
                grouping: {
                    autoExpandAll: true,
                },
                searchPanel: {
                    visible: true,
                    width: 240,
                    placeholder: 'Rechercher...',
                },
                paging: {
                    pageSize: 20,
                },
                allowColumnReordering: true,
                allowColumnResizing: true,
                columnAutoWidth: true,
                columns: [
                    {
                        caption: "N°",
                        dataField: "index",
                        dataType: "string",
                        alignment: "center",
                        fixed: true,
                    },
                    {
                        caption: 'Nom & prénoms',
                        dataField: 'full_name_salaried',
                        dataType: 'string',
                        alignment: 'left',
                        fixed: true,
                        width: 150
                    },
                    {
                        caption: 'Date Embauche',
                        dataField: 'date_embauche',
                        dataType: 'string',
                        alignment: 'center',
                        fixed: true,
                        width: 150
                    },
                    {
                        caption: 'Catégorie Agent',
                        dataField: 'category_salaried',
                        dataType: 'string',
                        alignment: 'center',
                        width: 150
                    },
                    {
                        caption: "Site Travail ",
                        dataField: "service",
                        dataType: "string",
                        alignment: "left",
                        width: 150
                    },
                    {
                        caption: "Poste",
                        dataField: "poste",
                        dataType: "string",
                        alignment: "left",
                        width: 150
                    },
                    {
                        caption: 'Nombre Part',
                        dataField: 'number_part_salaried',
                        dataType: 'string',
                        alignment: 'center',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(data.value);
                        },
                        width: 150
                    },
                    {
                        caption: 'Nombre Jour Travailler',
                        dataField: 'day_of_presence',
                        dataType: 'string',
                        alignment: 'center',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(data.value);
                        },
                        width: 150
                    },
                    {
                        caption: 'Salaire Catégoriel',
                        dataField: 'salaire_base_salaried',
                        dataType: 'number',
                        alignment: 'right',
                        width: 150
                    },
                    {
                        caption: 'Sursalaire',
                        dataField: 'sursalaire_salaried',
                        dataType: 'number',
                        alignment: 'right',
                        width: 150
                    },
                    {
                        caption: 'Prime Ancienneté',
                        dataField: 'prime_anciennete',
                        dataType: 'number',
                        alignment: 'right',
                        width: 150

                    },
                    {
                        caption: 'Prime tenue',
                        dataField: 'prime_de_tenue',
                        dataType: 'number',
                        alignment: 'right',
                        width: 150

                    },
                    {
                        caption: 'Prime Salissure',
                        dataField: 'prime_de_salissure',
                        dataType: 'number',
                        alignment: 'right',
                        width: 150
                    },
                    {
                        caption: 'Brut Imposable',
                        dataField: 'salaire_imposable_salaried',
                        dataType: 'number',
                        alignment: 'right',
                        width: 150
                    },
                    {
                        caption: "Charges Salariale",
                        alignment: 'center',
                        columns: [
                            {
                                caption: 'Its',
                                dataField: 'its_salaried',
                                dataType: 'number',
                                alignment: 'right',
                                width: 150
                            },
                            {
                                caption: 'Total Retenue Fiscale',
                                dataField: 'fixcale_salariale',
                                dataType: 'number',
                                alignment: 'right',
                                width: 150
                            },
                            {
                                caption: 'Cnps',
                                dataField: 'cnps_salaried',
                                dataType: 'number',
                                alignment: 'right',
                                width: 150
                            },
                            {
                                caption: 'Cmu',
                                dataField: 'cmu_salaried',
                                dataType: 'number',
                                alignment: 'right',
                                width: 150
                            },
                            {
                                caption: 'Total Retenue',
                                dataField: 'charge_salarial',
                                dataType: 'number',
                                alignment: 'right',
                                width: 150
                            },
                        ]
                    },
                    {
                        caption: 'Indemnité Transport',
                        dataField: 'prime_transport_legal',
                        dataType: 'number',
                        alignment: 'right',
                        width: 150
                    },
                    {
                        caption: 'Assurance',
                        dataField: 'assurance_salariale',
                        dataType: 'number',
                        alignment: 'right',
                        width: 150
                    },
                    {
                        caption: 'Régularisations',
                        alignment: "center",
                        columns: [
                            {
                                dataType: "number",
                                dataField: "regul_moins_percus",
                                caption: "Moins Perçus",
                                alignment: "right",
                                width: 150
                            },
                            {
                                dataType: "number",
                                dataField: "regul_plus_percus",
                                caption: "Plus Perçus",
                                alignment: "right",
                                width: 150
                            }
                        ]
                    },
                    {
                        caption: 'Net à Payer',
                        dataField: 'net_payer_salaried',
                        dataType: 'number',
                        alignment: 'right',
                        width: 150
                    },
                    {
                        caption: "Acompts & Prêts",
                        alignment: "center",
                        columns: [
                            {
                                dataType: "number",
                                dataField: "amount_acompte_mensuel",
                                caption: "Acompt",
                                alignment: "right",
                                width: 150
                            },
                            {
                                dataType: "number",
                                dataField: "amount_pret_mensuel",
                                caption: "Prêt",
                                alignment: "right",
                                width: 150
                            },
                        ]
                    },
                    {
                        caption: 'Charges Fiscales Patronales',
                        alignment: 'center',
                        columns: [
                            {
                                caption: 'Its',
                                dataField: 'employer_is',
                                dataType: 'number',
                                alignment: 'right',
                                width: 150
                            },
                            {
                                caption: 'Fdfp',
                                dataField: 'amount_fdfp',
                                dataType: 'number',
                                alignment: 'right',
                                width: 150
                            }
                        ]
                    },
                    {
                        caption: 'Charges Sociales Patronale',
                        alignment: 'center',
                        columns: [
                            {
                                caption: 'Caisse Retraite',
                                dataField: 'employer_cr',
                                dataType: 'number',
                                alignment: 'right',
                                width: 150

                            },
                            {
                                caption: 'Cmu',
                                dataField: 'employer_cmu',
                                dataType: 'number',
                                alignment: 'right',
                                width: 150

                            },
                            {
                                caption: 'Prestation Familiale',
                                dataField: 'employer_pr',
                                dataType: 'number',
                                alignment: 'right',
                                width: 150

                            },
                            {
                                caption: 'Accident Travail',
                                dataField: 'employer_at',
                                dataType: 'number',
                                alignment: 'right',
                                width: 150

                            },
                        ]
                    },
                    {
                        caption: 'Assurance Part Patronale',
                        dataField: 'assurance_patronales',
                        dataType: 'number',
                        alignment: 'right',
                        width: 150

                    },
                    {
                        caption: 'Total Charge Patronale',
                        dataField: 'charge_patronal',
                        dataType: 'number',
                        alignment: 'right',
                        width: 150
                    },
                    {
                        caption: 'Masse Salariale',
                        dataField: 'masse_salariale',
                        dataType: 'number',
                        alignment: 'right',
                        width: 150
                    },
                    {
                        dataField: 'print_bulletin',
                        caption: 'Imprimer Bulletin',
                        alignment: 'center',
                        cellTemplate: function (container, options) {
                            $("<a>")
                                .html('<i data-feather="book" style="color: black"></i>')
                                .attr("href", options.data.print_bulletin)
                                .attr("target", '_blank')
                                .appendTo(container);
                            feather.replace();
                        },
                    },

                ],
                summary: {
                    totalItems: [
                        {
                            column: 'index',
                            summaryType: 'count',
                            displayFormat: 'Participant : {0}'
                        },
                        {
                            column: 'number_part_salaried',
                            displayFormat: 'Total :'
                        },
                        {
                            column: 'salaire_base_salaried',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'sursalaire_salaried',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'prime_anciennete',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'prime_de_tenue',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'prime_de_salissure',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'salaire_imposable_salaried',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'its_salaried',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'fixcale_salariale',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'cnps_salaried',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'cmu_salaried',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'assurance_salariale',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'charge_salarial',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'prime_transport_legal',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'net_payer_salaried',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'employer_is',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'employer_cr',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'employer_cmu',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'employer_pr',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'employer_at',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'amount_fdfp',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'assurance_patronales',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'charge_patronal',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                        {
                            column: 'masse_salariale',
                            summaryType: 'sum',
                            customizeText: function (data) {
                                return new Intl.NumberFormat('fr-FR').format(data.value);
                            },
                        },
                    ]
                }
            })
            $("#print-contained").dxButton({
                stylingMode: 'contained',
                text: 'Imprimer bulletins',
                type: 'default',
                width: 120,
                onClick() {
                    window.location.href = '/campagne/bulletin/all_print';
                }
            })
            $("#canceled-contained").dxButton({
                stylingMode: 'contained',
                text: 'Annuler',
                type: 'danger',
                width: 120,
                onClick() {
                    $('#validationCancelModal').modal('show');
                }
            }) 
            $("#validated-contained").dxButton({
                stylingMode: 'contained',
                text: 'Valider',
                type: 'success',
                width: 120,
                onClick() {
                    $('#validationConfirmationModal').modal('show');
                }
            })
        });
    </script>
{% endblock %}