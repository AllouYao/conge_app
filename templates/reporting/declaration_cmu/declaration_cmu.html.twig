{% extends 'base.html.twig' %}

{% block title %}Livre de paie{% endblock %}
{% block stylesheets %}
    <style>
        #dataGridDeclarationCmu {
            height: 500px;
            border-width: 50px;
        }
    </style>
{% endblock %}
{% block body %}
    <div class="row">
        <div class="col-12">
            <form action="{{ url('api_reporting_declaration_cmu') }}" method="get" class="form-horizontal"
                  name="form_reporting_declaration_cmu" id="form_reporting_declaration_cmu">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title-custom" style="color: white">
                            <i data-feather="list"></i>
                            RECHERCHE
                        </h5>
                    </div>
                    <div class="card-body">
                        {{ include('reporting/form.html.twig') }}
                    </div>
                    <div class="card-footer">
                        <button class="btn btn-primary float-end">Rechercher</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title-custom" style="color: white">
                        <i data-feather="list"></i>
                        ETAT DES DECLARATIONS CMU
                    </h5>
                </div>
                <div class="card-body">
                    <div id="dataGridDeclarationCmu">Cliquer sur recherche pour afficher le tableau</div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>

        const $form = $(`form[name="form_reporting_declaration_cmu"]`);
        $form.submit(function (e) {
            e.preventDefault();
            const form = $(e.currentTarget);
            const $data = form.serialize();
            const tab = $data.split('&');
            const tab2_deb = tab[0].split('=');
            const tab2_fin = tab[1].split('=');
            const debut = tab2_deb[1];
            const fin = tab2_fin[1];

            $('#head').html(`du ${moment(debut).format('DD/MM/Y')} au ${moment(fin).format('DD/MM/Y')} `);

            $('#dataGridDeclarationCmu').dxDataGrid({
                dataSource: `{{ url('api_reporting_declaration_cmu') }}?${$data}`,
                showBorders: true,
                scrolling: {
                    mode: 'virtual',
                    columnRenderingMode: 'virtual'
                },
                groupPanel: {
                    visible: true
                },
                export: {
                    enabled: true,
                    allowExportSelectedData: true,
                    formats: ['xlsx'],
                },
                grouping: {
                    autoExpandAll: true,
                },
                searchPanel: {
                    visible: true,
                    width: 240,
                    placeholder: 'Rechercher...',
                },
                showColumnLines: true,
                showRowLines: true,
                paging: {
                    pageSize: 10,
                },
                allowColumnReordering: true,
                allowColumnResizing: true,
                columnAutoWidth: true,
                onExporting(e) {
                    if (e.format === 'xlsx') {
                        const workbook = new ExcelJS.Workbook();
                        const worksheet = workbook.addWorksheet('Employees');
                        DevExpress.excelExporter.exportDataGrid({
                            component: e.component,
                            worksheet,
                            autoFilterEnabled: true,
                        }).then(() => {
                            workbook.xlsx.writeBuffer().then((buffer) => {
                                saveAs(new Blob([buffer], {type: 'application /octet-stream'}), `Etat declaration fdfp ${moment(debut).format('DD/MM/Y')} au ${moment(fin).format('DD/MM/Y')}.xlsx`);
                            });
                        });
                        e.cancel = true;
                    }
                },
                columns: [
                    {
                        dataField: "index",
                        dataType: "number",
                        caption: "N°Ordre",
                        alignment: "center",
                        fixed: true,
                    },
                    {
                        dataField: 'matricule',
                        dataType: 'string',
                        caption: 'Matricule',
                        alignment: 'left',
                        fixed: true,
                    },
                    {
                        dataField: 'num_cnps_assure',
                        dataType: 'string',
                        caption: 'N° CNPS assure',
                        alignment: 'left',
                        fixed: true,
                    },
                    {
                        dataField: 'num_sec_assure',
                        dataType: 'string',
                        caption: 'Numéro Sécurité sociale Assure',
                        alignment: 'left',
                    },
                    {
                        dataField: 'nom_assure',
                        dataType: 'string',
                        caption: 'Nom',
                        alignment: 'left',
                    },
                    {
                        dataField: 'pnom_assure',
                        dataType: 'string',
                        caption: 'Prénoms',
                        alignment: 'left',
                    },
                    {
                        dataField: 'birthday',
                        dataType: 'date',
                        caption: 'Date de naissance assure',
                        alignment: 'center',
                    },
                    {
                        dataField: 'num_cnps_benef',
                        dataType: 'string',
                        caption: 'Numéro CNPS Beneficiaire',
                        alignment: 'left',
                    },
                    {
                        dataField: 'num_sec_benef',
                        dataType: 'string',
                        caption: 'Numéro Sécurité sociale Beneficiaire',
                        alignment: 'left',
                    },
                    {
                        dataField: 'type_benef',
                        dataType: 'string',
                        caption: 'Type Beneficiaire',
                        alignment: 'center',
                    },
                    {
                        dataField: 'full_name',
                        dataType: 'string',
                        caption: 'Nom beneficiaire',
                        alignment: 'left',
                    },
                    {
                        dataField: 'birthday_benef',
                        dataType: 'date',
                        caption: 'Date de naissance beneficiaire',
                        alignment: 'center',
                    },
                    {
                        dataField: 'genre_benef',
                        dataType: 'string',
                        caption: 'Genre beneficiaire',
                        alignment: 'center',
                    },
                ],
            });
        });
    </script>
{% endblock %}