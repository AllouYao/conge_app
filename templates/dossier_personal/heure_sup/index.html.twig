{% extends 'base.html.twig' %}

{% block title %}Liste des heures supp de lq periode | {{ date|capitalize }}{% endblock %}
{% block stylesheets %}
    <style>
        #dataGridHeureSupplementaire {
            border-width: 50px;
        }
    </style>
{% endblock %}
{% block body %}
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title-custom" style="color: white">
                        <i data-feather="list"></i>
                        LISTE DES HEURES SUPPLEMENTAIRES DE LA PERIODE DE {{ date|upper }}
                    </h5>
                </div>
                <div class="card-body">
                    <div id="dataGridHeureSupplementaire"></div>
                </div>
                <div class="card-footer">
                    <a href="{{ path('personal_heure_sup_new') }}" class="btn btn-primary float-end"
                       style="color: white">Nouveau</a>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}

    <script>
        function formatNumber(num) {
            return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
        }

        $(document).ready(function () {
            let debut;
            let fin;
            $("#dataGridHeureSupplementaire").dxDataGrid({
                dataSource: `{{ url('personal_heure_sup_api_heure_supplementaire') }}`,
                showBorders: true,
                height: 400,
                scrolling: {
                    columnRenderingMode: 'virtual',
                    mode: "virtual"
                },
                groupPanel: {
                    visible: true,
                },
                export: {
                    enabled: true,
                    allowExportSelectedData: true,
                    formats: ['xlsx'],
                },
                onExporting(e) {
                    if (e.format === 'xlsx') {
                        const workbook = new ExcelJS.Workbook();
                        const worksheet = workbook.addWorksheet('CHARGE PEOPLE');
                        DevExpress.excelExporter.exportDataGrid({
                            component: e.component,
                            worksheet,
                            autoFilterEnabled: true,
                            customizeCell: function (options) {
                                const {gridCell, excelCell} = options;
                                if (gridCell.rowType === 'data' && typeof gridCell.value === "number") {
                                    excelCell.text = formatNumber(gridCell.value)
                                    excelCell.font = {size: 9};
                                    excelCell.alignment = {horizontal: 'left'};
                                }
                            }
                        }).then(() => {
                            workbook.xlsx.writeBuffer().then(function (buffer) {
                                saveAs(new Blob([buffer], {type: 'application/octet-stream'}), `Charge people ${debut ?? " "} au ${fin ?? " "}.xlsx`);
                            });
                        });
                        e.cancel = true;
                    }
                },
                grouping: {
                    autoExpandAll: true,
                },
                searchPanel: {
                    visible: true,
                    width: 240,
                    placeholder: 'Rechercher...',
                },
                showColumnLines: true,
                showRowLines: true,
                paging: {
                    pageSize: 10,
                },
                allowColumnReordering: true,
                allowColumnResizing: true,
                columnAutoWidth: true,
                columns: [
                    {
                        caption: 'Matricule',
                        alignment: 'left',
                        dataType: 'string',
                        dataField: 'matricule',
                    },
                    {
                        caption: 'Nom',
                        alignment: 'left',
                        dataType: 'string',
                        dataField: 'name',
                    },
                    {
                        caption: 'Prénom(s)',
                        alignment: 'left',
                        dataType: 'string',
                        dataField: 'last_name',
                    },
                    {
                        caption: 'Date de naissance',
                        alignment: 'center',
                        dataType: 'string',
                        dataField: 'date_naissance',
                    },
                    {
                        caption: 'Catégorie salarié',
                        alignment: 'left',
                        dataType: 'string',
                        dataField: 'categorie_salarie',
                    },
                    {
                        caption: 'Date d\'embauche',
                        alignment: 'center',
                        dataType: 'string',
                        dataField: 'date_embauche',
                    },
                    {
                        caption: 'Date début',
                        alignment: 'center',
                        dataType: 'string',
                        dataField: 'date_debut',
                    },
                    {
                        caption: 'Heure début',
                        alignment: 'center',
                        dataType: 'string',
                        dataField: 'heure_debut',
                    },
                    {
                        caption: 'Date fin',
                        alignment: 'center',
                        dataType: 'string',
                        dataField: 'date_fin',
                    },
                    {
                        caption: 'Heure fin',
                        alignment: 'center',
                        dataType: 'string',
                        dataField: 'heure_fin',
                    },
                    {
                        caption: 'Total horraire',
                        alignment: 'center',
                        dataType: 'number',
                        dataField: 'total_horaire',
                        customizeText: function (data) {
                            return new Intl.NumberFormat('fr-FR').format(data.value);
                        },
                    },
                    {
                        caption: 'Ajouté le',
                        alignment: 'center',
                        dataType: 'string',
                        dataField: 'date_creation',
                    },
                    {
                        caption: 'Action',
                        dataField: 'modifier',
                        alignment: 'center',
                        cellTemplate: function (container, options) {
                            $("<a title='modifier'>")
                                .html('<i data-feather="edit" style="color: #C9971C"></i>')
                                .attr("href", options.data.modifier)
                                .appendTo(container);
                            feather.replace();
                        },
                    },
                ],
            })
        })
    </script>

{% endblock %}
