{% extends 'base.html.twig' %}

{% block title %}LISTE DU PERSONNEL{% endblock %}
{% block stylesheets %}
    <style>
        #dataGridPersonal {
            border-width: 50px;
        }
    </style>
{% endblock %}
{% block body %}
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title-custom" style="color: white">
                        <i data-feather="list"></i>
                        Liste du personnel
                    </h5>
                </div>
                <div class="card-body">
                    <div id="dataGridPersonal"></div>
                </div>
                <div class="card-footer">
                    <a href="{{ path('personal_new') }}" class="btn btn-primary float-end"
                       style="color: white">Nouveau</a>
                    <a href="{{ path('app_home') }}"
                       class="btn btn-info float-end me-2" style="color: white">Retour</a>
                </div>
            </div>
        </div>
    </div>
    <form id="personalEnable" method="POST" action="/dossier/personal/enable">
        <input id="personalEnableInput" type="hidden" name="personalEnableInput">
    </form>
    <form id="personalDisable" method="POST" action="/dossier/personal/disable">
        <input id="personalDisableInput" type="hidden" name="personalDisableInput">
    </form>
    <form id="toggleAll" method="POST" action="/dossier/personal/toggle/all">
        <input id="toggleAllInput" type="hidden" name="toggleAllInput">
    </form>




{% endblock %}

{% block javascripts %}

    <script>
        function formatNumber(num) {
            return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
        }

        $(document).ready(function () {
            const date = new Date();
            const year = date.getFullYear();
            const month = date.getMonth() + 1;
            const day = date.getDate();

            $("#dataGridPersonal").dxDataGrid({
                dataSource: `{{ url('personal_index_api') }}`,
                showBorders: true,
                showColumnLines: true,
                showRowLines: true,
                allowColumnReordering: true,
                allowColumnResizing: true,
                columnAutoWidth: true,
                rowAlternationEnabled: true,
                height: 355,
                scrolling: {
                    columnRenderingMode: 'virtual',
                    mode: "virtual"
                },
                groupPanel: {
                    visible: true
                },
                selection: {
                    mode: "multiple",
                    allowSelectAll: true,
                    showCheckBoxesMode: "always"
                },
                export: {
                    enabled: true,
                    allowExportSelectedData: true,
                    formats: ['xlsx'],
                },
                onExporting(e) {
                    if (e.format === 'xlsx') {
                        const workbook = new ExcelJS.Workbook();
                        const worksheet = workbook.addWorksheet('LISTE DU PERSONNEL');
                        DevExpress.excelExporter.exportDataGrid({
                            component: e.component,
                            worksheet,
                            autoFilterEnabled: true,
                            customizeCell: function (options) {

                                const {gridCell, excelCell} = options;
                                if (gridCell.rowType === 'data' && typeof gridCell.value === "number") {
                                    excelCell.text = formatNumber(gridCell.value)
                                    excelCell.font = {size: 9};
                                    excelCell.alignment = {horizontal: 'left'};
                                }
                            }
                        }).then(() => {
                            workbook.xlsx.writeBuffer().then(function (buffer) {
                                saveAs(new Blob([buffer], {type: 'application/octet-stream'}), `LISTE DU PERSONNEL DU ${year}-${month < 10 ? '0' : ''}${month}-${day}.xlsx`);
                            });
                        });
                        e.cancel = true;
                    }
                },
                grouping: {
                    autoExpandAll: true,
                },
                searchPanel: {
                    visible: true,
                    width: 240,
                    placeholder: 'Rechercher...',
                },
                paging: {
                    pageSize: 10,
                },
                columns: [
                    {
                        caption: 'N°Ordre',
                        alignment: 'center',
                        dataType: 'number',
                        dataField: 'index',
                        fixed: true
                    },
                    {
                        caption: 'Matricule',
                        dataType: 'string',
                        dataField: 'matricule',
                        alignment: 'center',
                        fixed: true
                    },
                    {
                        caption: 'Nom et prénoms',
                        alignment: 'left',
                        dataType: 'string',
                        dataField: 'full_name',
                        fixed: true
                    },
                    {
                        caption: 'Date naissance',
                        dataType: 'string',
                        dataField: 'date_naissance',
                        alignment: 'center',
                    },
                    {
                        caption: 'Service | departement',
                        dataType: 'string',
                        dataField: 'service',
                        alignment: 'left',
                    },
                    {
                        caption: 'Fonction',
                        dataType: 'string',
                        dataField: 'fonction',
                        alignment: 'left',
                    },
                    {
                        caption: 'Catégorie',
                        dataType: 'string',
                        dataField: 'category',
                        alignment: 'left',
                    },
                   
                    {
                        caption: 'Actions',
                        alignment: 'center',
                        columns: [
                            {
                                dataField: 'modifier',
                                caption: 'Modifier',
                                alignment: 'center',
                                cellTemplate: function (container, options) {
                                    $("<a>")
                                        .html('<i data-feather="edit" style="color: #C9971C"></i>')
                                        .attr("href", options.data.modifier)
                                        .appendTo(container);
                                    feather.replace();
                                }
                            },
                            {
                                dataField: 'action',
                                caption: 'Imprimer',
                                alignment: 'center',
                                cellTemplate: function (container, options) {
                                    $("<a>")
                                        .html('<i data-feather="printer" style="color: #0b0b0f"></i>')
                                        .attr("href", options.data.action)
                                        .attr("target", '_blank')
                                        .appendTo(container);
                                    feather.replace();
                                }
                            },
                        ],

                        width: 120
                    }
                ],
                summary: {
                    totalItems: [
                        {
                            column: 'index',
                            summaryType: 'count',
                            displayFormat: 'Salariés : {0}'
                        },
                    ]
                }
            })
        })


        $(document).ready(function () {

            $data = $('#toggleAllPersonals').val();
            console.log("data:" + $data);

        });
    </script>

{% endblock %} 